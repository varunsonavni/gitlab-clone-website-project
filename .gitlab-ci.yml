stages:
  - sast
  - build
 
sonarqube-check:
  stage: sast
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    #- sonar-scanner -X -Dsonar.sources=. -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=admin -Dsonar.password=admin123
    - sonar-scanner -Dsonar.sources=. -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
    # - |
    #   export QGSTATUS=`curl -s -u  $SONAR_TOKEN: http://18.232.146.98:9000/api/qualitygates/project_status?projectKey=new-group127_static-website-007_AYQy5EeRxITt09_C-Nlc | jq '.projectStatus.status' | tr -d '"'`
    # - printenv | grep QG
    # - if [ "$QGSTATUS" = "ERROR" ]; then exit 0; else echo "OK"; fi
    # - echo "before exit"
    # - exit 1
    # - echo "after exit IF"


  allow_failure: false
  only:
    - main




build_production:
  stage: build 
  script:
  - ls
  - pwd
  - echo "dd"
  allow_failure: false
  only: ['main']
 
